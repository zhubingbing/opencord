---
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  with_items:
    - { src: "style.config.js.j2", dest: "style.config.js" }
    - { src: "app.config.js.j2", dest: "app.config.js" }
  notify:
    - Restart xos-gui container

- name: Copying over xos-tosca configuration
  become: true
  vars:
    service: "{{ xos_services['xos-tosca'] }}"
  template:
    src: "{{ item.src }}"
    dest: "{{ node_config_directory }}/xos-tosca/{{ item.dest }}"
    mode: "0660"
  register: xos_tosca_confs
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  with_items:
    - { src: "xos-tosca.config.yaml.j2", dest: "xos-tosca.config.yaml" }
    - { src: "im_cert_chain.pem.j2", dest: "im_cert_chain.pem" }
  notify:
    - Restart xos-tosca container


- name: Check xos containers
  become: true
  kolla_docker:
    action: "compare_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ item.value.container_name }}"
    image: "{{ item.value.image }}"
    pid_mode: "{{ item.value.pid_mode|default('') }}"
    ipc_mode: "{{ item.value.ipc_mode|default(omit) }}"
    privileged: "{{ item.value.privileged|default(False) }}"
    volumes: "{{ item.value.volumes|reject('equalto', '')|list }}"
  register: check_xos_containers
  when:
    - action != "config"
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ xos_services }}"
  notify:
    - "Restart {{ item.key }} container"
